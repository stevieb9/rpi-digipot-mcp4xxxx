NAME

    RPi::DigiPot::MCP4XXXX - Interface to the MCP4xxxx series digital
    potentiometers on the Raspbery Pi

DESCRIPTION

    This distribution allows you to interface directly with the MCP41xxx
    and MCP42xxx series digital potentiomenters attached to the SPI bus on
    the Raspberry Pi.

    The MCP41xxx units have a single built-in potentiometer, where the
    MCP42xxx units have two.

    Both series will operate on either 3.3V or 5V, as the potentiometers do
    not send anything back to the Pi's GPIO.

    This software requires wiringPi <http://wiringpi.com> to be installed,
    as we use its SPI library <http://wiringpi.com/reference/spi-library>
    to communicate to the potentiometer over the SPI bus.

SYNOPSIS

METHODS

TECHNICAL INFORMATION

 OVERVIEW

    The MCP4xxxx series digital potentiometers operate as follows:

        - CS pin goes LOW, signifying data is about to be sent
        - exactly 16 bits are sent over SPI to the digipot (first 8 bits for control
          second 8 bits for data)
        - CS pin goes HIGH, signifying communication is complete

    There must be exactly 16 bits of data clocked in, or the commands and
    data will be thrown away, and nothing accomplished.

    Here's a diagram of the two bytes combined into a single bit string,
    showing the respective positions of the bits, and their function:

             |<-Byte 1: Control->|<-Byte 2: Data->|
             |                   |                |
        fcn: | command | channel |      data      |
             |---------|---------|----------------|
        bit: | 7 6 5 4 | 3 2 1 0 | 7 6 5 4 3 2 1 0|
             --------------------------------------
               ^                                 ^
               |                                 |
           MSB (bit 15)                      LSB (bit 0)

CONTROL BYTE

    The control byte is the most significant byte of the overall data being
    clocked into the potentiometer, and consists of a command nibble and a
    channel nibble.

 COMMAND

    The command nibble is the most significant (leftmost) 4 bits of the
    control byte (bits 7-4 in the above diagram). The following diagram
    describes all possible valid values.

        Bits    Value
        -------------
    
        0000    NOOP
        0001    set a new resistance value
        0010    put potentiometer into 'shutdown' mode
        0011    NOOP

 CHANNEL

    The channel nibble is the least significant 4 bits (rightmost) of the
    control byte (bits 3-0 in the above diagram). Valid values follow. Note
    that the MCP41xxx series units have only a single potentiometer built
    in, there's but one valid value for them.

        Bits    Value
        -------------
    
        0001    channel 0
        0010    channel 1    (MCP42xxx only)
        0011    both 0 and 1 (MCP42xxx only)

DATA BYTE

    The data byte consists of the least significant 8 bits (rightmost) of
    the 16 bit combined data destined to the potentiometer. Both the
    MCP41xxx and MCP42xxx series potentiometers contain 256 taps, so the
    mapping of this byte is simple: valid values are 0 (0% output) through
    255 (100% output).

REGISTER BIT SEQUENCE

    Here's an overview of the bits in order:

    15-14: Unused ("Don't Care Bits", per the datasheet)

    13-12: Command bits

    11-10: Unused

    9-8: Channel select bits

    7-0: Potentiometer tap setting data (0-255)

AUTHOR

    Steve Bertrand, <steveb at cpan.org>

LICENSE AND COPYRIGHT

    Copyright 2017 Steve Bertrand.

    This program is free software; you can redistribute it and/or modify it
    under the terms of either: the GNU General Public License as published
    by the Free Software Foundation; or the Artistic License.

    See http://dev.perl.org/licenses/ for more information.

